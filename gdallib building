
PREFIXPATH=/Data/Documents/CensusProject/gdallib/src/compiled

PKG_CONFIG_PATH=${PREFIXPATH}/lib/pkgconfig
LIBRARY_PATH=${PREFIXPATH}/lib
LD_LIBRARY_PATH=${PREFIXPATH}/lib/
C_INCLUDE_PATH=${PREFIXPATH}/include/
CPLUS_INCLUDE_PATH=${PREFIXPATH}/include/
PATH=${PREFIXPATH}/bin:$PATH
PREFIX=${PREFIXPATH}
# for googles retarded 'bazel' tool thinking tensorflow is bs.
JAVA_HOME=/lib/jvm/java-11-openjdk-11.0.11.0.9-4.fc34.x86_64
PATH=$PATH:$JAVA_HOME/bin
PATH=${PREFIXPATH}/sbin:$PATH
PYTHONPATH=/usr/lib64/python3.9:/usr/lib64/python3.9/lib-dynload:/home/john/PycharmProjects/pythonProject/venv/lib64/python3.9/site-packages:/home/john/PycharmProjects/pythonProject/venv/lib/python3.9/site-packages:/home/john/.local/lib/python3.9/site-packages:/usr/lib64/python3.9/site-packages:${PREFIXPATH}/lib/python3.9/site-packages:${PREFIXPATH}/lib64/python3.9/site-packages

export PREFIXPATH
export JAVA_HOME
export PREFIX
export PKG_CONFIG_PATH
export LIBRARY_PATH
export LD_LIBRARY_PATH
export C_INCLUDE_PATH
export CPLUS_INCLUDE_PATH
export PATH
export PYTHONPATH

# for python execution using pycharm you can -
# run the above and launch pycharm from the command line.

cd ${PREFIXPATH}/..


cd sqlite/
./configure --prefix=${PREFIXPATH}

cd zlib-1.2.11/
./configure --prefix=${PREFIXPATH}

cd jpeg-9d/
./configure --prefix=${PREFIXPATH}

cd libpng-1.6.37/
./configure --prefix=${PREFIXPATH}

cd tiff-4.2.0/
./configure --prefix=${PREFIXPATH}


cd openssl-1.1.1k/
./config --prefix=${PREFIXPATH}


cd libssh2-1.9.0/
./configure --prefix=${PREFIXPATH} --with-libssl-prefix=${PREFIXPATH} --with-crypto=openssl


cd nghttp2-1.43.0/
./configure --prefix=${PREFIXPATH}


cd curl-7.76.0/
./configure --prefix=${PREFIXPATH} --with-ssl=${PREFIXPATH} --with-crypto=${PREFIXPATH}/lib --with-libssh2=${PREFIXPATH}

cd proj-8.0.1/
./configure --prefix=${PREFIXPATH} --with-curl=${PREFIXPATH}/bin/curl-config

cd swig-4.0.2/
./configure --prefix=${PREFIXPATH}

cd gdal-3.2.3/
./configure --prefix=${PREFIXPATH} --with-python=yes

sudo dnf install bison

cd boost_1_76_0/
cd tools/build/
./bootstrap.sh
./b2 install --prefix=${PREFIXPATH} toolset=gcc
cd ../..
PATH=$PATH:${PREFIXPATH}/bin
export PATH
b2 toolset=gcc stage
b2 install --prefix=${PREFIXPATH} toolset=gcc

cd ImageMagick-7.1.0-0/
./configure --prefix=${PREFIXPATH}


# the tool I need.
pip install pillow


#not building.
#not actually the tool i need
#no need, skip this.
cd cd PythonMagick-0.9.19/
./configure --prefix=${PREFIXPATH}



# FFMPEG 4.4 IS TOO FAR ALONG AS OF 10 YEARS AGO OR HOWEVER LONG ITS BEEN SINCE THE WORLD DIED
sudo dnf install nasm
cd ffmpeg-4.4/
./configure --enable-pic --enable-shared --prefix=${PREFIXPATH} 

#FFMPEG I SWITCHED TO FFMPEG 3.4.8 LAST TIME AS I REMEMBER 'CANTOR'
# also reminds me of speaking with zimmerman
# you know you people could give me custody of an attractive female one of them that would help me remain 
# sane, and i could work her and keep her away from anything but adults
# because i tell you what i need is a reminder, and living reminders work best.
./configure --enable-pic --enable-shared --prefix=${PREFIXPATH} 


## lets try opencv
sudo dnf install gtk3-devel gtk+-devel
cd opencv-4.5.2
mkdir build
cd build
cmake -DCMAKE_INSTALL_PREFIX:PATH=${PREFIXPATH} -S .. -B .


# for googles retarded 'bazel' tool thinking tensorflow is bs.
JAVA_HOME=/lib/jvm/java-11-openjdk-11.0.11.0.9-4.fc34.x86_64
PATH=$PATH:$JAVA_HOME/bin
export JAVA_HOME
export PATH

#stl references in source itself need fixed.
#cd bazel-dist 
#env EXTRA_BAZEL_ARGS="--host_javabase=@local_jdk//:jdk" bash ./compile.sh


# download the fucking bazel install for linux x86_64 and skip this bullshit.
# jesus.
./bazel-4.1.0-installer-linux-x86_64.sh --prefix=${PREFIXPATH} 

pip install -U --user pip numpy wheel
pip install -U --user keras_preprocessing --no-deps

#STFU GARBAGE ! I'LL PUT THIS OFF NOW !
#cd tensorflow-2.4.2/

#./configure

#if you don't want to build with several 100 megs of cloud computing service enhancements that don't build anyway the following 
# has to be included.

# previously I pruned the libsvm svm-learn python's example down 
# the second array contains the digit classifiers. this is wrong, the output from the finalized machine is awful.


#tensorflow enables a fuck ton of cloud computing shit by default whcih is problematic.
#course the build itself is fucking problematic.

#bazel build  --config=noaws --config=nogcp  --config=nohdfs  --config=nonccl  tensorflow/tools/pip_package:build_pip_package   

# gonna move on for now a bug has been entered into their fucking system.


